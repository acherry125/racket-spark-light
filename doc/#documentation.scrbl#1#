#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.12 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 66 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 36 36 140 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 4 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 -1
-1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 36 36 140 0 0 0 -1
-1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 75 1 #"\0"
0 4 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 -1
-1           0 986 0 28 3 21 #"#lang scribble/manual"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 5 #"title"
0 0 24 3 1 #"{"
0 0 20 3 32 #"Racket Spark Light Documentation"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 55 #"This section will expain each available feature in RSL."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 7 #"section"
0 0 24 3 1 #"{"
0 0 20 3 7 #"Grammer"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"@("
0 0 14 3 14 #"racketgrammar*"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 7 #"Program"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 9 #"Top-Level"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 9 #"Top-Level"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 10 #"Definition"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 4 #"Expr"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 10 #"Definition"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"Id"
0 0 24 3 1 #" "
0 0 14 3 5 #"RExpr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 15 #"define-map-func"
0 0 24 3 2 #" ("
0 0 14 3 2 #"Id"
0 0 24 3 1 #" "
0 0 14 3 2 #"Id"
0 0 24 3 2 #") "
0 0 14 3 5 #"RExpr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 18 #"define-filter-pred"
0 0 24 3 2 #" ("
0 0 14 3 2 #"Id"
0 0 24 3 1 #" "
0 0 14 3 2 #"Id"
0 0 24 3 2 #") "
0 0 14 3 5 #"RExpr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 7 #"save-ds"
0 0 24 3 1 #" "
0 0 14 3 2 #"Id"
0 0 24 3 1 #" "
0 0 14 3 9 #"Datashell"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"Expr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"RExpr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"TExpr"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"RExpr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 19 3 20 #"\"Racket expressions\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"TExpr"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 9 #"Datashell"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 14 #"Transformation"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 6 #"Action"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"TFunc"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 14 #"transformation"
0 0 24 3 2 #" ("
0 0 14 3 2 #"Id"
0 0 24 3 2 #") "
0 0 14 3 4 #"Expr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"pred"
0 0 24 3 2 #" ("
0 0 14 3 2 #"Id"
0 0 24 3 2 #") "
0 0 14 3 4 #"Expr"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"AFunc"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"Id"
0 0 24 3 1 #" "
0 0 14 3 2 #"Id"
0 0 24 3 2 #") "
0 0 14 3 4 #"Expr"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 8 #"FilePath"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 6 #"String"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 9 #"Datashell"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"mk-datashell"
0 0 24 3 2 #" ["
0 0 14 3 6 #"Listof"
0 0 24 3 1 #" "
0 0 14 3 3 #"Any"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"mk-datashell"
0 0 24 3 1 #" "
0 0 14 3 8 #"FilePath"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 14 #"Transformation"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 14 #"Transformation"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"ds-map"
0 0 24 3 1 #" "
0 0 14 3 5 #"TFunc"
0 0 24 3 1 #" "
0 0 14 3 9 #"DataShell"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 6 #"Action"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"ds-reduce"
0 0 24 3 1 #" "
0 0 14 3 5 #"AFunc"
0 0 24 3 1 #" "
0 0 14 3 4 #"Expr"
0 0 24 3 1 #" "
0 0 14 3 9 #"Datashell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"ds-collect"
0 0 24 3 1 #" "
0 0 14 3 9 #"Datashell"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 7 #"section"
0 0 24 3 1 #"{"
0 0 20 3 20 #"Creating A Datashell"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 2 #"A "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 9 #"Datashell"
0 0 24 3 1 #"}"
0 0 20 3 67
#" is an immutable structure that stores user inputted lists of data,"
0 0 24 29 1 #"\n"
0 0 20 3 38 #"on which RSL Operations are performed."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 65
#"You will able to create a Datashell with the following functions:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 15 3 7 #"defform"
0 0 24 3 2 #"[("
0 0 14 3 12 #"mk-datashell"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 11 #"#:contracts"
0 0 24 3 2 #"(["
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 5 #"list?"
0 0 24 3 4 #"])]{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 40 #"Creates a Datashell from the given list."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 8 #"Example:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 11 #"racketblock"
0 0 24 3 2 #"[("
0 0 14 3 7 #"save-ds"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-datashell"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 4 #"para"
0 0 24 3 2 #"{@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 12 #"Feature/Bug:"
0 0 24 3 1 #"}"
0 0 20 3 42 #" Currently, the user is only able to call "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 12 #"mk-datashell"
0 0 24 3 1 #"}"
0 0 20 11 8 #" within "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 7 #"save-ds"
0 0 24 3 1 #"}"
0 0 20 3 1 #"."
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 15 3 7 #"defform"
0 0 24 3 2 #"[("
0 0 14 3 12 #"mk-datashell"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 11 #"#:contracts"
0 0 24 3 2 #"(["
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 14 3 7 #"String?"
0 0 24 3 4 #"])]{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 49 #"Creates a Datashell from the given csv file path."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 8 #"Example:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 11 #"racketblock"
0 0 24 3 2 #"[("
0 0 14 3 7 #"save-ds"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-datashell"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"../path-to-file.csv\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 15 3 7 #"defform"
0 0 24 3 2 #"[("
0 0 14 3 7 #"save-ds"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ds-map"
0 0 24 3 1 #" "
0 0 14 3 4 #"func"
0 0 24 3 1 #" "
0 0 14 3 9 #"datashell"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 11 #"#:contracts"
0 0 24 3 2 #"(["
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 5 #"list?"
0 0 24 3 4 #"])]{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 47 #"Creates a Datashell from an existing Datashell."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 10 #"Note that "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 6 #"ds-map"
0 0 24 3 1 #"}"
0 0 20 3 23 #" can only be used with "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 7 #"save-ds"
0 0 24 3 1 #"}"
0 0 20 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 2 #" @"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 6 #"ds-map"
0 0 24 3 1 #"}"
0 0 20 3 27 #" will be introduced in the "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 14 #"Transformation"
0 0 24 3 1 #"}"
0 0 20 3 10 #" sections."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 8 #"Example:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 11 #"racketblock"
0 0 24 3 1 #"["
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 15 3 15 #"define-map-func"
0 0 24 3 2 #" ("
0 0 14 3 5 #"sub-8"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"save-ds"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ds-map"
0 0 24 3 1 #" "
0 0 14 3 5 #"sub-8"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 4 #"para"
0 0 24 3 1 #"{"
0 0 20 3 72
(
 #"Additionally, all Transformations return one and only one new Datash"
 #"ell."
) 0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 7 #"section"
0 0 24 3 1 #"{"
0 0 20 3 15 #"Transformations"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 10 #"subsection"
0 0 24 3 1 #"{"
0 0 20 3 33 #"Defining Transformation Functions"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 20 #"Transformations are "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 6 #"lazily"
0 0 24 3 1 #"}"
0 0 20 3 11 #" evaluated."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 1 #"A"
0 0 20 3 74
(
 #" Transformation function provides a mapping from one item to another"
 #" item."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 15 3 7 #"defform"
0 0 24 3 2 #"[("
0 0 15 3 15 #"define-map-func"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #") "
0 0 14 3 4 #"body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 11 #"#:contracts"
0 0 24 3 2 #"(["
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"id?"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 5 #"expr?"
0 0 24 3 4 #"])]{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 59
#"Creates a transformation function which can be passed into "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 6 #"ds-map"
0 0 24 3 1 #"}"
0 0 20 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 10 #"Note that "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 15 #"define-map-func"
0 0 24 3 1 #"}"
0 0 20 3 55 #" only takes one input argument and produces one output."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 8 #"Example:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 11 #"racketblock"
0 0 24 3 1 #"["
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 15 #"define-map-func"
0 0 24 3 2 #" ("
0 0 14 3 5 #"sub-8"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 15 3 7 #"defform"
0 0 24 3 2 #"[("
0 0 15 3 18 #"define-filter-pred"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #") "
0 0 14 3 4 #"body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 11 #"#:contracts"
0 0 24 3 2 #"(["
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"id?"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 5 #"expr?"
0 0 24 3 4 #"])]{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 45 #"Creates a predicate which can be passed into "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 6 #"ds-map"
0 0 24 3 1 #"}"
0 0 20 3 40 #" which when executed will filter out all"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 20 3 38 #"items which do not pass the predicate."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 10 #"Note that "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 18 #"define-filter-pred"
0 0 24 3 1 #"}"
0 0 20 3 54 #" only takes one input argument and produces a boolean."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 8 #"Example:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 11 #"racketblock"
0 0 24 3 1 #"["
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 18 #"define-filter-pred"
0 0 24 3 2 #" ("
0 0 14 3 12 #"less-than-5?"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 10 #"subsection"
0 0 24 3 1 #"{"
0 0 20 3 32 #"Mapping Transformation Functions"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 78
(
 #"When called on a Datashell, transformations are queued up for later "
 #"execution."
) 0 0 24 29 1 #"\n"
0 0 20 11 101
(
 #"These transformations will not execute until an Action is called on "
 #"the Datashell. This allow RSL to "
) 0 0 20 3 9 #"evaluate "
0 0 20 3 62
#"all transformations applied to the Datashell in one iteration."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 15 3 7 #"defform"
0 0 24 3 2 #"[("
0 0 14 3 6 #"ds-map"
0 0 24 3 1 #" "
0 0 14 3 5 #"tfunc"
0 0 24 3 1 #" "
0 0 14 3 9 #"datashell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 11 #"#:contracts"
0 0 24 3 1 #"("
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 5 #"tfunc"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 3 #"id?"
0 0 24 3 1 #" "
0 0 14 3 7 #"lambda?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 9 #"datashell"
0 0 24 3 1 #" "
0 0 14 3 10 #"Datashell?"
0 0 24 3 4 #"])]{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 81
(
 #"Creates a new Datashell using the given Datashell mapped with the gi"
 #"ven function."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 66
#"The given procedure is not evaluted until an action is introduced."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 4 #"para"
0 0 24 3 2 #"{@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 12 #"Feature/Bug:"
0 0 24 3 1 #"}"
0 0 20 3 31 #" The user is only able to call "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 6 #"ds-map"
0 0 24 3 1 #"}"
0 0 20 3 8 #" within "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 7 #"save-ds"
0 0 24 3 1 #"}"
0 0 20 3 1 #"."
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 8 #"Example:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 11 #"racketblock"
0 0 24 3 1 #"["
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"save-ds"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-datashell"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"save-ds"
0 0 24 3 1 #" "
0 0 14 3 2 #"ab"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ds-map"
0 0 24 3 1 #" "
0 0 14 3 5 #"add-5"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 7 #"section"
0 0 24 3 1 #"{"
0 0 20 3 7 #"Actions"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 12 #"Actions are "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 7 #"eagerly"
0 0 24 3 1 #"}"
0 0 20 3 11 #" evaluated."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 11 109
(
 #"An Action immediatly triggers the evaluation of the datashell's queu"
 #"ed transformation(s), and it reduces the "
) 0 0 20 3 42 #"transformed dataset into a value to return"
0 0 24 29 1 #"\n"
0 0 20 3 12 #"to the user."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 15 3 7 #"defform"
0 0 24 3 2 #"[("
0 0 14 3 9 #"ds-reduce"
0 0 24 3 1 #" "
0 0 14 3 5 #"afunc"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 9 #"datashell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 11 #"#:contracts"
0 0 24 3 2 #"(["
0 0 14 3 5 #"afunc"
0 0 24 3 1 #" "
0 0 14 3 10 #"procedure?"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 4 #"base"
0 0 24 3 1 #" "
0 0 14 3 4 #"Any?"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 9 #"datashell"
0 0 24 3 1 #" "
0 0 14 3 10 #"Datashell?"
0 0 24 3 4 #"])]{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 11 103
(
 #"Applies the datashell's queued transformations then immediatly evalu"
 #"ates and returns the result of the "
) 0 0 20 3 36 #"reduction function on the datashell."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 19 #"The return type of "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 9 #"ds-reduce"
0 0 24 3 1 #"}"
0 0 20 3 31 #" can be any except a Datashell."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 56 #"The return type of ds-reduce is the same as the type of "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 4 #"base"
0 0 24 3 1 #"}"
0 0 20 3 25 #", and the return type of "
0 0 24 3 1 #"@"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 5 #"afunc"
0 0 24 3 1 #"}"
0 0 20 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 8 #"Example:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 11 #"racketblock"
0 0 24 3 1 #"["
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"save-ds"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-datashell"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ds-reduce"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 15 3 7 #"defform"
0 0 24 3 2 #"[("
0 0 14 3 10 #"ds-collect"
0 0 24 3 1 #" "
0 0 14 3 9 #"datashell"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 23 3 11 #"#:contracts"
0 0 24 3 2 #"(["
0 0 14 3 9 #"datashell"
0 0 24 3 1 #" "
0 0 14 3 10 #"Datashell?"
0 0 24 3 4 #"])]{"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 20 3 82
(
 #"Returns a list from the given datashell by applying all the datashel"
 #"l's queued fun"
) 0 0 20 11 22 #"ctions and immediatly "
0 0 20 3 23 #"collecting the results."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 2 #" @"
0 0 14 3 4 #"bold"
0 0 24 3 1 #"{"
0 0 20 3 10 #"ds-collect"
0 0 24 3 1 #"}"
0 0 20 3 24 #" returns a [Listof Any]."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"}"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 20 3 8 #"Example:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"@"
0 0 14 3 11 #"racketblock"
0 0 24 3 1 #"["
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"save-ds"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mk-datashell"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"save-ds"
0 0 24 3 1 #" "
0 0 14 3 3 #"ab2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ds-map"
0 0 24 3 1 #" "
0 0 14 3 12 #"less-than-5?"
0 0 24 3 1 #" "
0 0 14 3 2 #"a2"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"save-ds"
0 0 24 3 1 #" "
0 0 14 3 4 #"abc2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ds-map"
0 0 24 3 1 #" "
0 0 14 3 7 #"mult-10"
0 0 24 3 1 #" "
0 0 14 3 3 #"ab2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"save-ds"
0 0 24 3 1 #" "
0 0 14 3 5 #"abcd2"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ds-map"
0 0 24 3 1 #" "
0 0 14 3 15 #"multiple-of-20?"
0 0 24 3 1 #" "
0 0 14 3 4 #"abc2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ds-collect"
0 0 24 3 1 #" "
0 0 14 3 5 #"abcd2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 20 3 59
#"The example above will return all functions applied above: "
0 0 24 29 1 #"\n"
0           0
